name: Build and Deploy project

on:
  push:
    branches:
      - main
      - deployment

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && (github.ref == 'refs/heads/deployment' || github.ref == 'refs/heads/main')
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - WebGL
        os:  # Add the operating systems you want to support
          - ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Cache Unity Library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.os }}-${{ hashFiles('**/Library/**') }}
          restore-keys: Library-${{ matrix.os }}-

      - name: Cache Unity Build Artifacts
        uses: actions/cache@v2
        with:
          path: build
          key: Build-${{ matrix.targetPlatform }}-${{ matrix.os }}-${{ hashFiles('build/**') }}
          restore-keys: Build-${{ matrix.targetPlatform }}-${{ matrix.os }}-

      - name: Check Disk Space (Android)
        if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Build Unity Project
        id: build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      - name: Upload Build Artifact
        id: upload_artifact
        uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

      - name: Check Build Status
        if: steps.build.outcome != 'success'
        run: |
          echo "::set-output name=error_message::Build failed: ${{ steps.build.conclusion }}"

  deployToGitHubPages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: buildForAllSupportedPlatforms
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/deployment')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          lfs: true
      
      - name: Configure Git
        run: |
          git config --global user.email "$(git log -1 --pretty=format:'%ae')"
          git config --global user.name "$(git log -1 --pretty=format:'%an')"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install Dependencies
        run: npm install -g gh-pages

      - name: Deploy to GitHub Pages
        run: gh-pages -d build/WebGL -b gh-pages
