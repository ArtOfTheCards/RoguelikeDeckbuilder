name: Build and Deploy project

on:
  push:
    branches:
      - main
      - deployment
    tags:
      - "v*"
jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    if: github.event_name == 'push' && (github.ref == 'refs/heads/deployment' || github.ref == 'refs/heads/main')
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows # Build a Windows 64-bit standalone.
          - WebGL
        os:
          - ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Cache Unity Library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.os }}-${{ hashFiles('**/Library/**') }}
          restore-keys: Library-${{ matrix.os }}-

      - name: Cache Unity Build Artifacts
        uses: actions/cache@v2
        with:
          path: build
          key: Build-${{ matrix.targetPlatform }}-${{ matrix.os }}-${{ hashFiles('build/**') }}
          restore-keys: Build-${{ matrix.targetPlatform }}-${{ matrix.os }}-

      - name: Check Disk Space (Android)
        if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Build Unity Project
        id: build
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      - name: Upload Build Artifact
        id: upload_artifact
        uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

      - name: Check Build Status
        if: steps.build.outcome != 'success'
        run: |
          echo "::set-output name=error_message::Build failed: ${{ steps.build.conclusion }}"

  deployToGitHubPages:
    needs: buildForAllSupportedPlatforms
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/deployment')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: Build-WebGL
          path: build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: build/WebGL
          publish_branch: gh-pages

      - name: Configure LFS for gh-pages branch
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git lfs install
          git add .gitattributes
          git ls-files --others --exclude-standard build | xargs -I {} git lfs track "{}"
          git diff-index --quiet HEAD || git commit -m "Enable LFS for artifacts" && git push origin gh-pages || echo "No changes to commit."

  createWindowsRelease:
    name: Create Windows Release
    runs-on: ubuntu-latest
    needs: buildForAllSupportedPlatforms
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/deployment')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse -q --verify "refs/tags/${{ github.ref }}"; then
            echo "::set-output name=tag_exists::true"
          else
            echo "::set-output name=tag_exists::false"
          fi

      - name: Delete existing tag
        if: steps.check_tag.outputs.tag_exists == 'true'
        run: |
          git push --delete origin ${{ github.ref }}
          git tag -d ${{ github.ref }}

      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: Build-StandaloneWindows
          path: build/StandaloneWindows
